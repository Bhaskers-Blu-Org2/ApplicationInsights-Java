plugins {
    id 'com.github.johnrengelman.shadow'
}

apply from: "$buildScriptsDir/common-java.gradle"
apply from: "$buildScriptsDir/publishing.gradle"

apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

def generatedDir = 'generated'
def generatedPath = "src/main/$generatedDir"

idea {
    module {
        generatedSourceDirs << file(generatedPath)

        sourceDirs << file('src/main/java')
        sourceDirs << file(generatedPath)
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.16.1'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    outputSubDir = generatedDir
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = generatedDir
                }
            }
        }
    }
    generatedFilesBaseDir = "${projectDir}/src/"
}

sourceSets {
    main {
        output.dir(generatedPath, builtBy: 'generateProto')
        java {
            srcDirs generatedPath
        }
    }
}

clean {
    delete generatedPath
}

dependencies {
    compile project(':core')
    compile ([group: 'com.google.code.gson', name: 'gson', version: '2.8.2'])
    compile ([group: 'com.google.guava', name: 'guava', version: '27.1-android'])
    compile ([group: 'com.google.protobuf', name:'protobuf-java', version:'3.6.1'])
    compile ([group: 'io.grpc', name: 'grpc-stub', version: '1.16.1'])
    compile ([group: 'io.grpc', name: 'grpc-protobuf', version: '1.16.1'])
    runtime ([group: 'io.grpc', name: 'grpc-netty-shaded', version: '1.16.1'])

    testCompile group: 'org.hamcrest', name:'hamcrest-core', version:'1.3'
    testCompile group: 'org.hamcrest', name:'hamcrest-library', version:'1.3'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    testCompile group: 'io.grpc', name:'grpc-testing', version:'1.16.1'
}

archivesBaseName = 'applicationinsights-local-forwarder'
ext.dependenciesPrefix = 'com.microsoft.applicationinsights.localforwarder.dependencies'
shadowJar {
    archiveClassifier = ''
    mergeServiceFiles()
    relocate 'org.apache.commons', "${dependenciesPrefix}.apachecommons"
    relocate 'com.google', "${dependenciesPrefix}.google"
    relocate 'io.grpc', "${dependenciesPrefix}.io.grpc"
    relocate 'io.opencensus', "${dependenciesPrefix}.io.opencensus"

    exclude '**/*.proto'
    dependencies {
        exclude(project(':core'))
        exclude(project(':ApplicationInsightsInternalLogger'))
    }
}

def coreDeps = project(':core').configurations.runtime.incoming.resolutionResult.allDependencies.collect {
    it.selected.moduleVersion
}.findAll {
    !(it.group == 'com.microsoft.azure' || it.name == 'gson' || it.name == 'guava')
}
coreDeps.unique().each { dep ->
    shadowJar.dependencies {
        exclude(dependency("$dep"))
    }
}

jar {
    dependsOn shadowJar
    enabled = false
}

// region Publishing properties

projectPomName = project.msftAppInsights + " Java SDK Local Forwarder Channel"
projectPomDescription = "This is the local forwarder module of " + project.msftAppInsightsJavaSdk

whenPomConfigured = { p ->
    p.dependencies = p.dependencies.findAll { it.groupId == 'com.microsoft.azure' && it.artifactId == 'applciationinsights-core' }
}

// endregion Publishing properties